{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getData } from '../../api/data.js';\nimport * as echarts from 'echarts';\nimport Echart from '';\nexport default {\n  name: 'home',\n  data: function data() {\n    return {\n      userImg: require('../../src/assets/images/user.jpeg'),\n      tableData: [],\n      tableLabel: {\n        name: '课程',\n        todayBuy: '今日购买',\n        monthBuy: '本月购买',\n        toalBuy: '总购买'\n      },\n      countData: [{\n        name: '今日支付订单',\n        val: 123,\n        icon: 'success',\n        color: '#2ec7c9'\n      }, {\n        name: '今日收藏订单',\n        val: 210,\n        icon: 'start-on',\n        color: '#ffb980'\n      }, {\n        name: '今日未支付订单',\n        val: 1234,\n        icon: 's-goods',\n        color: '#5ab1ef'\n      }, {\n        name: '本月支付订单',\n        val: 1243,\n        icon: 'success',\n        color: '#2ec7c9'\n      }, {\n        name: '本月收藏订单',\n        val: 210,\n        icon: 'start-on',\n        color: '#ffb980'\n      }, {\n        name: '本月未支付订单',\n        val: 1234,\n        icon: 's-goods',\n        color: '#5ab1ef'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    getData().then(function (res) {\n      var _res$data = res.data,\n          code = _res$data.code,\n          data = _res$data.data;\n\n      if (code === 20000) {\n        _this.tableData = data.tableData;\n        var order = data.orderData;\n        var xData = order.date;\n        var keyArray = Object.keys(order.data[0]);\n        var series = [];\n        keyArray.forEach(function (key) {\n          series.push({\n            name: key,\n            data: order.data.map(function (item) {\n              return item[key];\n            }),\n            type: 'line'\n          });\n        }); // 折线图\n\n        var option = {\n          xAxis: {\n            data: xData\n          },\n          yAxis: {},\n          legend: {\n            data: keyArray\n          },\n          series: series\n        };\n        var E = echarts.init(_this.$refs.echarts);\n        E.setOption(option); //用户图\n\n        var userOption = {\n          legend: {\n            textStyle: {\n              color: '#333'\n            }\n          },\n          grid: {\n            left: '20%'\n          },\n          // 提示框\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis: {\n            type: 'category',\n            data: data.userData.map(function (item) {\n              return item.date;\n            }),\n            axisLine: {\n              lineStyle: {\n                color: '#17b3a3'\n              }\n            },\n            axisLabel: {\n              interval: 0,\n              color: '#333'\n            }\n          },\n          yAxis: [{\n            type: 'value',\n            axisLine: {\n              lineStyle: {\n                color: '#17b3a3'\n              }\n            }\n          }],\n          color: ['#2ec7c9', '#b6a2de'],\n          series: [{\n            name: '新增用户',\n            data: data.userData.map(function (item) {\n              return item.new;\n            }),\n            type: 'bar'\n          }, {\n            name: '活跃用户',\n            data: data.userData.map(function (item) {\n              return item.active;\n            }),\n            type: 'bar'\n          }]\n        };\n        var U = echarts.init(_this.$refs.userEcharts);\n        U.setOption(userOption); // 饼图\n\n        var videoOption = {\n          tooltip: {\n            trigger: 'item'\n          },\n          color: ['#0f78f4', '#dd536b', '#9462e5', '#a6a6a6', '#e1bb22', '#39c362', '#3ed1cf'],\n          series: [{\n            data: data.videoData,\n            type: 'pie'\n          }]\n        };\n        var V = echarts.init(_this.$refs.videoEcharts);\n        V.setOption(videoOption);\n      }\n\n      console.log(res);\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACAA,cADA;AAEAC,MAFA,kBAEA;AACA;AACAC,2DADA;AAEAC,mBAFA;AAGAC;AACAJ,kBADA;AAEAK,wBAFA;AAGAC,wBAHA;AAIAC;AAJA,OAHA;AASAC;AACAR,sBADA;AAEAS,gBAFA;AAGAC,uBAHA;AAIAC;AAJA,SAMA;AACAX,sBADA;AAEAS,gBAFA;AAGAC,wBAHA;AAIAC;AAJA,OANA,EAYA;AACAX,uBADA;AAEAS,iBAFA;AAGAC,uBAHA;AAIAC;AAJA,OAZA,EAkBA;AACAX,sBADA;AAEAS,iBAFA;AAGAC,uBAHA;AAIAC;AAJA,OAlBA,EAwBA;AACAX,sBADA;AAEAS,gBAFA;AAGAC,wBAHA;AAIAC;AAJA,OAxBA,EA8BA;AACAX,uBADA;AAEAS,iBAFA;AAGAC,uBAHA;AAIAC;AAJA,OA9BA;AATA;AA+CA,GAlDA;AAmDAC,SAnDA,qBAmDA;AAAA;;AACAC;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACAC;AACAC;AACAf,qBADA;AAEAC;AAAA;AAAA,cAFA;AAGAe;AAHA;AAKA,SANA,EANA,CAaA;;AACA;AACAC;AACAhB;AADA,WADA;AAIAiB,mBAJA;AAKAC;AACAlB;AADA,WALA;AAQAc;AARA;AAUA;AACAK,4BAzBA,CA2BA;;AACA;AACAD;AACAE;AACAV;AADA;AADA,WADA;AAMAW;AACAC;AADA,WANA;AASA;AACAC;AACAC;AADA,WAVA;AAaAR;AACAD,4BADA;AAEAf;AAAA;AAAA,cAFA;AAGAyB;AACAC;AACAhB;AADA;AADA,aAHA;AAQAiB;AACAC,yBADA;AAEAlB;AAFA;AARA,WAbA;AA0BAO,kBACA;AACAF,yBADA;AAEAU;AACAC;AACAhB;AADA;AADA;AAFA,WADA,CA1BA;AAoCAA,uCApCA;AAqCAI,mBACA;AACAf,wBADA;AAEAC;AAAA;AAAA,cAFA;AAGAe;AAHA,WADA,EAMA;AACAhB,wBADA;AAEAC;AAAA;AAAA,cAFA;AAGAe;AAHA,WANA;AArCA;AAkDA;AACAc,gCA/EA,CAiFA;;AACA;AACAN;AACAC;AADA,WADA;AAIAd,kBACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,CAJA;AAaAI,mBACA;AACAd,gCADA;AAEAe;AAFA,WADA;AAbA;AAoBA;AACAe;AACA;;AACAC;AACA,KA5GA;AA6GA;AAjKA","names":["name","data","userImg","tableData","tableLabel","todayBuy","monthBuy","toalBuy","countData","val","icon","color","mounted","getData","keyArray","series","type","xAxis","yAxis","legend","E","textStyle","grid","left","tooltip","trigger","axisLine","lineStyle","axisLabel","interval","U","V","console"],"sourceRoot":"views/home","sources":["index.vue"],"sourcesContent":["<template>\r\n    <el-row class=\"home\" :gutter=\"20\">\r\n        <el-col :span=\"8\" style=\"margin-top: 20px\">\r\n            <el-card shadow=\"hover\">\r\n                <div class=\"user\">\r\n                    <img :src=\"userImg\"/>\r\n                    <div class=\"userinfo\">\r\n                        <p class=\"name\">admine</p>\r\n                        <p class=\"access\">超级管理员</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"login-info\">\r\n                    <p>上次登录时间:<span>2022-4-23</span></p>\r\n                    <p>上次登录地点:<span>合肥</span></p>\r\n                </div>\r\n            </el-card>\r\n            <el-card style=\"margin-top:20px;height: 460px;\">\r\n                <el-table :data=\"tableData\">\r\n                    <el-table-column \r\n                    v-for=\"(val, key) in tableLabel\"\r\n                    :key=\"key\"\r\n                    :prop=\"key\"\r\n                    :label=\"val\">\r\n                </el-table-column>\r\n                </el-table>\r\n\r\n            </el-card>\r\n        </el-col>\r\n        <el-col style=\"margin-top: 20px;\" :span=\"16\">\r\n            <div class=\"num\">\r\n                <el-card v-for=\"item in countData\" :key=\"item.name\" :body-style=\"{dispaly:'flex', padding:0}\">\r\n                    <i class=\"icon\" :class=\"`el-icon-${item.icon}`\" :style=\"{background:item.color}\"></i>\r\n                    <div class=\"detail\">\r\n                        <p class=\"num\">￥{{item.val}}</p>\r\n                        <p class=\"txt\">{{item.name}}</p>\r\n                    </div>\r\n                </el-card>\r\n            </div>\r\n            <el-card style=\"height: 280px;\">\r\n                <div style=\"height: 280px;\" ref=\"echarts\"></div></el-card>\r\n            <div class=\"graph\">\r\n                <el-card style=\"height:260px\">\r\n                    <div style=\"height: 240px;\" ref=\"userEcharts\"></div>\r\n                </el-card>\r\n                <el-card style=\"height:260px\">\r\n                    <div style=\"height: 240px;\" ref=\"videoEcharts\"></div>\r\n                </el-card>\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\n    import {getData} from '../../api/data.js'\r\n    import * as echarts from 'echarts'\r\n    import Echart from ''\r\n    export default{\r\n        name:'home',\r\n        data(){\r\n            return{\r\n                userImg: require('../../src/assets/images/user.jpeg'),\r\n                tableData:[],\r\n                tableLabel:{\r\n                    name:'课程',\r\n                    todayBuy:'今日购买',\r\n                    monthBuy:'本月购买',\r\n                    toalBuy:'总购买'\r\n                },\r\n                countData:[{\r\n                    name:'今日支付订单',\r\n                    val:123,\r\n                    icon:'success',\r\n                    color:'#2ec7c9'\r\n                    },\r\n                    {\r\n                    name:'今日收藏订单',\r\n                    val:210,\r\n                    icon:'start-on',\r\n                    color:'#ffb980'\r\n                    },\r\n                    {\r\n                    name:'今日未支付订单',\r\n                    val:1234,\r\n                    icon:'s-goods',\r\n                    color:'#5ab1ef'\r\n                    },\r\n                    {\r\n                    name:'本月支付订单',\r\n                    val:1243,\r\n                    icon:'success',\r\n                    color:'#2ec7c9'\r\n                    },\r\n                    {\r\n                    name:'本月收藏订单',\r\n                    val:210,\r\n                    icon:'start-on',\r\n                    color:'#ffb980'\r\n                    },\r\n                    {\r\n                    name:'本月未支付订单',\r\n                    val:1234,\r\n                    icon:'s-goods',\r\n                    color:'#5ab1ef'\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            getData().then(res => {\r\n                const {code, data}= res.data\r\n                if(code === 20000){\r\n                    this.tableData = data.tableData\r\n                    const order = data.orderData\r\n                    const xData = order.date\r\n                    const keyArray = Object.keys(order.data[0])\r\n                    const series = []\r\n                    keyArray.forEach(key => {\r\n                        series.push({\r\n                            name:key,\r\n                            data:order.data.map(item => item[key]),\r\n                            type:'line'\r\n                        })\r\n                    })\r\n                    // 折线图\r\n                    const  option = {\r\n                        xAxis:{\r\n                            data:xData\r\n                        },\r\n                        yAxis:{},\r\n                        legend:{\r\n                            data:keyArray\r\n                        },\r\n                        series\r\n                    }\r\n                    const E = echarts.init(this.$refs.echarts)\r\n                    E.setOption(option)\r\n\r\n                    //用户图\r\n                    const userOption = {\r\n                        legend:{\r\n                            textStyle: {\r\n                                color: '#333'\r\n                            },\r\n                        },\r\n                        grid: {\r\n                            left: '20%',\r\n                        },\r\n                        // 提示框\r\n                        tooltip: {\r\n                            trigger: 'axis',\r\n                        },\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            data: data.userData.map(item => item.date),\r\n                            axisLine: {\r\n                                lineStyle: {\r\n                                    color: '#17b3a3',\r\n                                },\r\n                            },\r\n                            axisLabel:{\r\n                                interval: 0,\r\n                                color: '#333',\r\n                            },\r\n                        },\r\n                        yAxis: [\r\n                            {\r\n                                type: 'value',\r\n                                axisLine: {\r\n                                    lineStyle: {\r\n                                        color: '#17b3a3',\r\n                                    },\r\n                                },\r\n                            },\r\n                        ],\r\n                        color: ['#2ec7c9', '#b6a2de'],\r\n                        series: [\r\n                            {\r\n                                name:'新增用户',\r\n                                data: data.userData.map(item => item.new),\r\n                                type:'bar',\r\n                            },\r\n                            {\r\n                                name:'活跃用户',\r\n                                data: data.userData.map(item => item.active),\r\n                                type:'bar',\r\n                            },\r\n                        ],\r\n                    }\r\n                    const U = echarts.init(this.$refs.userEcharts)\r\n                    U.setOption(userOption)\r\n\r\n                    // 饼图\r\n                    const videoOption = {\r\n                        tooltip: {\r\n                            trigger: 'item',\r\n                        },\r\n                        color: [\r\n                            '#0f78f4',\r\n                            '#dd536b',\r\n                            '#9462e5',\r\n                            '#a6a6a6',\r\n                            '#e1bb22',\r\n                            '#39c362',\r\n                            '#3ed1cf',  \r\n                        ],\r\n                        series: [\r\n                            {\r\n                                data: data.videoData,\r\n                                type: 'pie',\r\n                            }\r\n                        ],\r\n                    }\r\n                    const V = echarts.init(this.$refs.videoEcharts)\r\n                    V.setOption(videoOption)\r\n                }\r\n                console.log(res)\r\n            })\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}