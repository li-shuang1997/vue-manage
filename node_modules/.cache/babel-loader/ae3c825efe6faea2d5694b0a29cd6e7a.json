{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../config\";\nconst baseUrl = process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro;\n\nclass HttpRequest {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  getInsideConfig() {\n    const config = {\n      baseUrl: this.baseUrl,\n      header: {}\n    };\n    return config;\n  }\n\n  interceptors(instance) {\n    // 添加请求拦截器\n    instance.interceptors.request.use(function (config) {\n      // 在发送请求之前做些什么\n      return config;\n    }, function (error) {\n      // 对请求错误做些什么\n      return Promise.reject(error);\n    }); // 添加响应拦截器\n\n    instance.interceptors.response.use(function (response) {\n      console.log(response, 'response'); // 对响应数据做点什么\n\n      return response;\n    }, function (error) {\n      console.log(error, 'error'); // 对响应错误做点什么\n\n      return Promise.reject(error);\n    });\n  }\n\n  request(options) {\n    // 使用axios.create方法创建axios实例\n    const instance = axios.create();\n    options = { ...this.getInsideConfig(),\n      ...options\n    };\n    this.interceptors(instance);\n    return instance(options);\n  }\n\n}\n\nexport default new HttpRequest(baseUrl);","map":{"version":3,"sources":["E:/前端学习/myproject/vue-manage/vue-manage/api/axios.js"],"names":["axios","config","baseUrl","process","env","NODE_ENV","dev","pro","HttpRequest","constructor","getInsideConfig","header","interceptors","instance","request","use","error","Promise","reject","response","console","log","options","create"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB,aAAxB,GAAwCJ,MAAM,CAACC,OAAP,CAAeI,GAAvD,GAA6DL,MAAM,CAACC,OAAP,CAAeK,GAA5F;;AAEA,MAAMC,WAAN,CAAiB;AACbC,EAAAA,WAAW,CAACP,OAAD,EAAS;AAChB,SAAKA,OAAL,GAAeA,OAAf;AACH;;AACDQ,EAAAA,eAAe,GAAE;AACb,UAAMT,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC,KAAKA,OADF;AAEXS,MAAAA,MAAM,EAAC;AAFI,KAAf;AAIA,WAAOV,MAAP;AACH;;AACDW,EAAAA,YAAY,CAACC,QAAD,EAAU;AACtB;AACIA,IAAAA,QAAQ,CAACD,YAAT,CAAsBE,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUd,MAAV,EAAkB;AAChD;AACA,aAAOA,MAAP;AACH,KAHD,EAGG,UAAUe,KAAV,EAAiB;AAChB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAND,EAFkB,CAUlB;;AACAH,IAAAA,QAAQ,CAACD,YAAT,CAAsBO,QAAtB,CAA+BJ,GAA/B,CAAmC,UAAUI,QAAV,EAAoB;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAqB,UAArB,EADmD,CAEnD;;AACA,aAAOA,QAAP;AACH,KAJD,EAIG,UAAUH,KAAV,EAAiB;AAChBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkB,OAAlB,EADgB,CAEhB;;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KARD;AASH;;AACDF,EAAAA,OAAO,CAACQ,OAAD,EAAS;AACZ;AACA,UAAMT,QAAQ,GAAGb,KAAK,CAACuB,MAAN,EAAjB;AACAD,IAAAA,OAAO,GAAG,EAAC,GAAG,KAAKZ,eAAL,EAAJ;AAA4B,SAAGY;AAA/B,KAAV;AACA,SAAKV,YAAL,CAAkBC,QAAlB;AACA,WAAOA,QAAQ,CAACS,OAAD,CAAf;AACH;;AAtCY;;AAyCjB,eAAe,IAAId,WAAJ,CAAgBN,OAAhB,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport config from \"../config\";\r\n\r\nconst baseUrl = process.env.NODE_ENV ==='development' ? config.baseUrl.dev : config.baseUrl.pro\r\n\r\nclass HttpRequest{\r\n    constructor(baseUrl){\r\n        this.baseUrl = baseUrl;\r\n    }\r\n    getInsideConfig(){\r\n        const config = {\r\n            baseUrl:this.baseUrl,\r\n            header:{}\r\n        }\r\n        return config\r\n    }\r\n    interceptors(instance){   \r\n    // 添加请求拦截器\r\n        instance.interceptors.request.use(function (config) {\r\n            // 在发送请求之前做些什么\r\n            return config;\r\n        }, function (error) {\r\n            // 对请求错误做些什么\r\n            return Promise.reject(error);\r\n        });\r\n\r\n        // 添加响应拦截器\r\n        instance.interceptors.response.use(function (response) {\r\n            console.log(response,'response')\r\n            // 对响应数据做点什么\r\n            return response;\r\n        }, function (error) {\r\n            console.log(error,'error')\r\n            // 对响应错误做点什么\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n    request(options){\r\n        // 使用axios.create方法创建axios实例\r\n        const instance = axios.create()\r\n        options = {...this.getInsideConfig(), ...options}\r\n        this.interceptors(instance)\r\n        return instance(options)\r\n    }\r\n}\r\n\r\nexport default new HttpRequest(baseUrl)"]},"metadata":{},"sourceType":"module"}