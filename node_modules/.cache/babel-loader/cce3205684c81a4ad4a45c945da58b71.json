{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\nimport * as echarts from 'echarts';\nexport default {\n  props: {\n    isAxisChart: {\n      type: Boolean,\n      default: true\n    },\n    charData: {\n      type: Object,\n      default: function _default() {\n        return {\n          xData: [],\n          series: []\n        };\n      }\n    }\n  },\n  watch: {\n    charData: {\n      handler: function handler() {\n        this.initChart();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    initChart: function initChart() {\n      this.initChartData();\n\n      if (this.echart) {\n        this.echart.setOption(this.options);\n      } else {\n        this.echart = echarts.init(this.$refs.echart);\n        this.echart.setOption(this.options);\n      }\n    },\n    initChartData: function initChartData() {\n      if (this.isAxisChart) {\n        this.axisOption.xAxis.data = this.charData.xData;\n        this.axisOption.series = this.charData.series;\n      } else {\n        this.normalOption.series = this.charData.series;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      axisOption: {\n        textStyle: {\n          color: '#333'\n        },\n        grid: {\n          left: '20%'\n        },\n        // 提示框\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: '#17b3a3'\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: '#333'\n          }\n        },\n        yAxis: [{\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#17b3a3'\n            }\n          }\n        }],\n        color: ['#2ec7c9', '#b6a2de', '#5ab1ef', '#ffb980', '#d87a80', '#8d98b3'],\n        series: []\n      },\n      normalOption: {\n        tooltip: {\n          trigger: 'item'\n        },\n        color: ['#0f78f4', '#dd536b', '#9462e5', '#a6a6a6', '#e1bb22', '#39c362', '#3ed1cf'],\n        series: []\n      },\n      echart: null\n    };\n  },\n  computed: {\n    options: function options() {\n      // 判断当前为什么图\n      return this.isAxisChart ? this.axisOption : this.normalOption;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;AAQA;AACA;AACAA;AACAC;AACAC,mBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAC,aAFA,sBAEA;AACA;AACAE,mBADA;AAEAC;AAFA;AAIA;AAPA;AALA,GADA;AAgBAC;AACAH;AACAI;AACA;AACA,OAHA;AAIAC;AAJA;AADA,GAhBA;AAwBAC;AACAC,aADA,uBACA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA,KATA;AAUAC,iBAVA,2BAUA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AAjBA,GAxBA;AA2CAC,MA3CA,kBA2CA;AACA;AACAC;AACAC;AACAC;AADA,SADA;AAIAC;AACAC;AADA,SAJA;AAOA;AACAC;AACAC;AADA,SARA;AAWAC;AACAnB,0BADA;AAEAW,kBAFA;AAGAS;AACAC;AACAP;AADA;AADA,WAHA;AAQAQ;AACAC,uBADA;AAEAT;AAFA;AARA,SAXA;AAwBAU,gBACA;AACAxB,uBADA;AAEAoB;AACAC;AACAP;AADA;AADA;AAFA,SADA,CAxBA;AAkCAA,iFAlCA;AAmCAV;AAnCA,OADA;AAsCAqB;AACAR;AACAC;AADA,SADA;AAIAJ,gBACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,CAJA;AAaAV;AAbA,OAtCA;AAqDAsB;AArDA;AAuDA,GAnGA;AAqGAC;AACAC,WADA,qBACA;AACA;AACA;AACA;AAJA;AArGA","names":["props","isAxisChart","type","default","charData","xData","series","watch","handler","deep","methods","initChart","initChartData","data","axisOption","textStyle","color","grid","left","tooltip","trigger","xAxis","axisLine","lineStyle","axisLabel","interval","yAxis","normalOption","echart","computed","options"],"sourceRoot":"src/components","sources":["Echarts.vue"],"sourcesContent":["<template>\r\n    <div ref=\"echart\">\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import * as echarts from 'echarts'\r\n    export default{\r\n        props: {\r\n            isAxisChart: {\r\n                type: Boolean,\r\n                default: true,\r\n            },\r\n            charData: {\r\n                type: Object,\r\n                default() {\r\n                    return {\r\n                        xData: [],\r\n                        series:[]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            charData: {\r\n                handler: function(){\r\n                    this.initChart()\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        methods: {\r\n            initChart(){\r\n                this.initChartData()\r\n                if(this.echart){\r\n                    this.echart.setOption(this.options)\r\n                }else{\r\n                    this.echart = echarts.init(this.$refs.echart)\r\n                    this.echart.setOption(this.options)\r\n                }\r\n            },\r\n            initChartData(){\r\n                if(this.isAxisChart){\r\n                    this.axisOption.xAxis.data = this.charData.xData;\r\n                    this.axisOption.series = this.charData.series;\r\n                }else{\r\n                    this.normalOption.series = this.charData.series\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return{\r\n                axisOption: {\r\n                    textStyle: {\r\n                        color: '#333'\r\n                    },\r\n                grid: {\r\n                    left: '20%',\r\n                },\r\n                // 提示框\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: [],\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#17b3a3',\r\n                        },\r\n                    },\r\n                    axisLabel:{\r\n                        interval: 0,\r\n                        color: '#333',\r\n                    },\r\n                },\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                            color: '#17b3a3',\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n                color: ['#2ec7c9', '#b6a2de','#5ab1ef', '#ffb980', '#d87a80', '#8d98b3'],\r\n                series: [],\r\n            },\r\n                normalOption: {\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                    },\r\n                    color: [\r\n                        '#0f78f4',\r\n                        '#dd536b',\r\n                        '#9462e5',\r\n                        '#a6a6a6',\r\n                        '#e1bb22',\r\n                        '#39c362',\r\n                        '#3ed1cf',  \r\n                    ],\r\n                    series: [],\r\n                },\r\n                echart: null,\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            options() {\r\n                // 判断当前为什么图\r\n                return this.isAxisChart ? this.axisOption : this.normalOption\r\n            }\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}